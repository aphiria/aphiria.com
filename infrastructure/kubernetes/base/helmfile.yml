repositories:
  - name: jetstack
    url: https://charts.jetstack.io
  - name: grafana
    url: https://grafana.github.io/helm-charts
  - name: prometheus-community
    url: https://prometheus-community.github.io/helm-charts
releases:
  - name: cert-manager
    namespace: cert-manager
    chart: jetstack/cert-manager
    version: v1.16.1
    createNamespace: true
    set:
      - name: extraArgs[0]
        value: "--feature-gates=ExperimentalGatewayAPISupport=true"
      - name: crds.enabled
        value: "true"
  - name: nginx-gateway
    namespace: nginx-gateway
    chart: oci://ghcr.io/nginxinc/charts/nginx-gateway-fabric
    version: 1.2.0
    createNamespace: true
    hooks:
      - events: [ "prepare" ]
        command: "kubectl"
        args: [ "apply", "-f", "https://github.com/kubernetes-sigs/gateway-api/releases/download/v1.2.0/standard-install.yaml" ]
    wait: true
  - name: prometheus
    namespace: monitoring
    chart: prometheus-community/prometheus
    values:
      - server:
          persistentVolume:
            enabled: true
            accessModes: [ "ReadWriteOnce" ]
            size: 10Gi
          service:
            port: 9090
  - name: kube-state-metrics
    namespace: monitoring
    chart: prometheus-community/kube-state-metrics
    values:
      - serviceMonitor:
          enabled: true
          namespace: monitoring
          additionalLabels:
            release: prometheus
  - name: grafana
    namespace: monitoring
    chart: grafana/grafana
    values:
      - ingress:
          enabled: false
      - envFromSecrets:
          - name: monitoring-secrets
      - extraEnv:
          - name: GF_SERVER_ROOT_URL
            value: "https://grafana.aphiria.com"
          - name: GF_AUTH_DISABLE_LOGIN_FORM
            value: "true"
          - name: GF_AUTH_BASIC_ENABLED
            value: "false"
      - datasources:
          datasources.yaml:
            apiVersion: 1
            datasources:
              - name: Prometheus
                type: prometheus
                access: proxy
                url: http://prometheus-server:80
                isDefault: true
      - grafana.ini:
          server:
            root_url: https://grafana.aphiria.com
          auth:
            disable_login_form: true
            basic_auth_enabled: false
          auth.github:
            enabled: true
            allow_sign_up: true
            scopes: user:email,read:org
            client_id: ${GITHUB_OAUTH_CLIENT_ID}
            client_secret: ${GITHUB_OAUTH_CLIENT_SECRET}
            allowed_organizations: ${GITHUB_OAUTH_ORGANIZATION}
          unified_alerting:
            enabled: true
          users:
            # Auto-add every new OAuth user to the main org
            auto_assign_org: true
            # Give them full Org-Admin privileges
            auto_assign_org_role: Admin
      - persistence:
          enabled: true
          accessModes:
            - ReadWriteOnce
          size: 10Gi
      - sidecar:
          alerts:
            enabled: true
            label: grafana_alert
            searchNamespace:
              - monitoring
          dashboards:
            default:
              # Read the JSON files for the dashboards and add them to the helmfile (their definitions are too long to put into ConfigMaps)
              cluster-overview.json: |-
                {{ readFile "monitoring/dashboards/cluster-overview.json" | indent 12 }}
              node-exporter.json: |-
                {{ readFile "monitoring/dashboards/node-exporter.json" | indent 12 }}
              nginx.json: |-
                {{ readFile "monitoring/dashboards/nginx.json" | indent 12 }}
            enabled: true
            label: grafana_dashboard
            searchNamespace:
              - monitoring
            provider:
              disableDelete: false
