repositories:
  - name: jetstack
    url: https://charts.jetstack.io
  - name: prometheus-community
    url: https://prometheus-community.github.io/helm-charts
releases:
  - name: cert-manager
    namespace: cert-manager
    chart: jetstack/cert-manager
    version: v1.16.1
    createNamespace: true
    set:
      - name: extraArgs[0]
        value: "--feature-gates=ExperimentalGatewayAPISupport=true"
      - name: crds.enabled
        value: "true"
  - name: nginx-gateway
    namespace: nginx-gateway
    chart: oci://ghcr.io/nginxinc/charts/nginx-gateway-fabric
    version: 1.2.0
    createNamespace: true
    hooks:
      # Install the necessary CRDs
      - events: [ "prepare" ]
        command: "kubectl"
        args: [ "apply", "-f", "https://github.com/kubernetes-sigs/gateway-api/releases/download/v1.2.0/standard-install.yaml" ]
    wait: true
  - name: kube-prometheus-stack
    namespace: monitoring
    chart: prometheus-community/kube-prometheus-stack
    version: "69.6.0"
    createNamespace: true
    values:
      - prometheus:
          prometheusSpec:
            retention: 7d
            resources:
              requests:
                memory: 2Gi
              limits:
                memory: 4Gi
      - alertmanager:
          enabled: true
      - grafana:
          adminPassword: "admin"  # TODO: Change for security
          serviceMonitor:
            enabled: true
          defaultDashboardsEnabled: true
          additionalDataSources:
            - name: Loki
              type: loki
              access: proxy
              url: http://loki.monitoring.svc.cluster.local
          sidecar:
            dashboards:
              enabled: true
              folderAnnotation: "grafana_folder"
              searchNamespace: ALL
            dashboardProviders:
              dashboardproviders.yaml:
                apiVersion: 1
                providers:
                  - name: grafana-dashboards-kubernetes
                    orgId: 1
                    folder: Kubernetes
                    type: file
                    disableDeletion: true
                    options:
                      path: /var/lib/grafana/dashboards/grafana-dashboards-kubernetes
      - kubeStateMetrics:
          enabled: true
      - nodeExporter:
          enabled: true
      - serviceMonitor:
          enabled: true

# TODO:  Need a way to install dotdc/grafana-dashboards-kubernetes dashboards
