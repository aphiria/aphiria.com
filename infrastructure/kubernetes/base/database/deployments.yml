apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      containers:
        - name: db
          image: postgres:16
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432 # Make sure this matches the DB_PORT environment var
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: db-data
          env:
            # These specific env vars are required for PostgreSQL to start up
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: env-var-secrets
                  key: DB_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: env-var-secrets
                  key: DB_PASSWORD
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          readinessProbe:
            exec:
              # Make sure the port matches the DB_PORT environment var
              command: [ 'pg_isready', '-U', '$(POSTGRES_USER)', '-d', '$(POSTGRES_DB)', '-h', '127.0.0.1', '-p', '5432']
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
      volumes:
        - name: db-data
          persistentVolumeClaim:
            claimName: db-pv-claim
