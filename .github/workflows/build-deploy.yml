name: build-deploy
on:
  pull_request: # TODO: Only run this on master, not PRs
  push:
    branches:
      - master
jobs:
  build:
    runs-on: ubuntu-latest
    name: Build
    strategy:
      fail-fast: true
      matrix:
        include:
          - dockerfile: ./infrastructure/docker/build/Dockerfile
            image: davidbyoung/aphiria.com-build
          - dockerfile: ./infrastructure/docker/runtime/api/Dockerfile
            image: davidbyoung/aphiria.com-api
          - dockerfile: ./infrastructure/docker/runtime/web/Dockerfile
            image: davidbyoung/aphiria.com-web
      max-parallel: 1 # We want the matrix to run in sequence, not parallel
    steps:
      - name: Check Out Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Log Into Docker Hub
        uses: docker/login-action@v3
        with:
          username: davidbyoung
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
      - name: Set Up Docker buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ${{ matrix.image }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
  deploy:
    runs-on: ubuntu-latest
    name: Deploy
    needs: build
    steps:
      - name: Check Out Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set Up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.4
      - name: Terraform Init
        run: terraform -chdir=./infrastructure/terraform init -backend-config="access_key=${{ secrets.DIGITALOCEAN_SPACES_ACCESS_KEY }}" -backend-config="secret_key=${{ secrets.DIGITALOCEAN_SPACES_SECRET_KEY }}"
      - name: Terraform Validate
        run: terraform -chdir=./infrastructure/terraform validate
      - name: Terraform Plan
        run: terraform -chdir=./infrastructure/terraform plan -var="do_access_token=${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}" -no-color -input=false
      - name: Terraform Apply
        run: terraform -chdir=./infrastructure/terraform apply -var="do_access_token=${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}" -no-color -input=false
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      - name: Save DigitalOcean kubeconfig
        run: doctl kubernetes cluster kubeconfig save ${{ steps.vars.output.cluster_id }}

      # TODO: Need to enable the ingress nginx addon, install helm
      # TODO: Need to download KUBERNETES_SECRETS k8s manifest to file
      # TODO: Need to deploy to my k8s cluster
